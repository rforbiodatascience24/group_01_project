---
title: "Load"
author: 
  - Rune Daucke 
  - David Faurdal
  - Luisa Weisch
format: html
editor: visual
---

## Importing necessary libraries 
```{r}
#| results: "hide"
library(tidyverse)
source("99_proj_func.R")
library(dplyr)

```

## Download and load data

For ease of running the data is downloaded directly from Gene Expression Omnibus and loaded.

```{r}
#| results: "hide"


# Download data
url <- "https://ftp.ncbi.nlm.nih.gov/geo/series/GSE72nnn/GSE72267/matrix/GSE72267_series_matrix.txt.gz"
dest_folder ="../data/_raw"
dest_path <- "../data/_raw/GSE72267_series_matrix.txt.gz"

# create destination folder if needed
if (!dir.exists(dest_folder)) {
  dir.create(dest_folder, recursive = TRUE)}

download.file(url, dest_path, mode = "wb")
```
Next, dataframes are created, containing the reads of specific genes for multiple samples. This dataframe will get saved as 01_dat_load.tsv for further anaylsis.
```{r}
# Load and wrangle data
df <- read_tsv(dest_path, comment = "!") %>%
  as_tibble()

metadata <- readLines(dest_path)

titles <- extract_feature("!Sample_title", metadata)

# Assign new names to all columns except ID_REF
# This replaces the accession with the sample title given in
# the "!" comment fields
colnames(df)[-1] <- titles
control_cols <- df %>% dplyr::select(matches("control"))
pd_cols <- df %>% dplyr::select(matches("PD"))

# Combine relevant columns 
bind_cols(dplyr::select(df, ID_REF), control_cols, pd_cols)


# write to new load data table
write_tsv(x = df, file="../data/01_dat_load.tsv")

# Load Metadata
num_sample_titles <- length(titles)

# Extract all unique feature names
feature_names <- metadata %>%
  str_extract("^!\\S+") %>%
  unique()

```

Note: If the loading of the data returns a "The size of the connection buffer was not large enough to fit a line"-error this can be resolved by running:

```{r}
#| eval: false
#| echo: true
Sys.setenv(VROOM_CONNECTION_SIZE = "500000")
```
